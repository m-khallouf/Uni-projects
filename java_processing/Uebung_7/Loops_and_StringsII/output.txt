

Testfälle für Schleifen-/Stringübungen
======================================


Tests mit isTautogramm    13.12.2022 16:31:37,058
======================
     _.--""--._
    /  _    _  \
 _  ( (_\  /_) )  _
{ \._\   /\   /_./ }
/_"=-.}______{.-="_\      laut RuntimeConfig noch nicht implementiert
 _  _.=("""")=._  _
(_'"_.-"`~~`"-._"'_)
 {_"            "_}


Tests mit convertDez2Dual    13.12.2022 16:31:37,059
=========================
 Dez ->  Dualzahl | Dez ->  Dualzahl | Dez ->  Dualzahl | Dez ->  Dualzahl | Dez ->  Dualzahl | Dez ->  Dualzahl | Dez ->  Dualzahl | Dez ->  Dualzahl |
   0 ->         0 |  32 ->    100000 |  64 ->   1000000 |  96 ->   1100000 | 128 ->  10000000 | 160 ->  10100000 | 192 ->  11000000 | 224 ->  11100000 |
   1 ->         1 |  33 ->    100001 |  65 ->   1000001 |  97 ->   1100001 | 129 ->  10000001 | 161 ->  10100001 | 193 ->  11000001 | 225 ->  11100001 |
   2 ->        10 |  34 ->    100010 |  66 ->   1000010 |  98 ->   1100010 | 130 ->  10000010 | 162 ->  10100010 | 194 ->  11000010 | 226 ->  11100010 |
   3 ->        11 |  35 ->    100011 |  67 ->   1000011 |  99 ->   1100011 | 131 ->  10000011 | 163 ->  10100011 | 195 ->  11000011 | 227 ->  11100011 |
   4 ->       100 |  36 ->    100100 |  68 ->   1000100 | 100 ->   1100100 | 132 ->  10000100 | 164 ->  10100100 | 196 ->  11000100 | 228 ->  11100100 |
   5 ->       101 |  37 ->    100101 |  69 ->   1000101 | 101 ->   1100101 | 133 ->  10000101 | 165 ->  10100101 | 197 ->  11000101 | 229 ->  11100101 |
   6 ->       110 |  38 ->    100110 |  70 ->   1000110 | 102 ->   1100110 | 134 ->  10000110 | 166 ->  10100110 | 198 ->  11000110 | 230 ->  11100110 |
   7 ->       111 |  39 ->    100111 |  71 ->   1000111 | 103 ->   1100111 | 135 ->  10000111 | 167 ->  10100111 | 199 ->  11000111 | 231 ->  11100111 |
   8 ->      1000 |  40 ->    101000 |  72 ->   1001000 | 104 ->   1101000 | 136 ->  10001000 | 168 ->  10101000 | 200 ->  11001000 | 232 ->  11101000 |
   9 ->      1001 |  41 ->    101001 |  73 ->   1001001 | 105 ->   1101001 | 137 ->  10001001 | 169 ->  10101001 | 201 ->  11001001 | 233 ->  11101001 |
  10 ->      1010 |  42 ->    101010 |  74 ->   1001010 | 106 ->   1101010 | 138 ->  10001010 | 170 ->  10101010 | 202 ->  11001010 | 234 ->  11101010 |
  11 ->      1011 |  43 ->    101011 |  75 ->   1001011 | 107 ->   1101011 | 139 ->  10001011 | 171 ->  10101011 | 203 ->  11001011 | 235 ->  11101011 |
  12 ->      1100 |  44 ->    101100 |  76 ->   1001100 | 108 ->   1101100 | 140 ->  10001100 | 172 ->  10101100 | 204 ->  11001100 | 236 ->  11101100 |
  13 ->      1101 |  45 ->    101101 |  77 ->   1001101 | 109 ->   1101101 | 141 ->  10001101 | 173 ->  10101101 | 205 ->  11001101 | 237 ->  11101101 |
  14 ->      1110 |  46 ->    101110 |  78 ->   1001110 | 110 ->   1101110 | 142 ->  10001110 | 174 ->  10101110 | 206 ->  11001110 | 238 ->  11101110 |
  15 ->      1111 |  47 ->    101111 |  79 ->   1001111 | 111 ->   1101111 | 143 ->  10001111 | 175 ->  10101111 | 207 ->  11001111 | 239 ->  11101111 |
  16 ->     10000 |  48 ->    110000 |  80 ->   1010000 | 112 ->   1110000 | 144 ->  10010000 | 176 ->  10110000 | 208 ->  11010000 | 240 ->  11110000 |
  17 ->     10001 |  49 ->    110001 |  81 ->   1010001 | 113 ->   1110001 | 145 ->  10010001 | 177 ->  10110001 | 209 ->  11010001 | 241 ->  11110001 |
  18 ->     10010 |  50 ->    110010 |  82 ->   1010010 | 114 ->   1110010 | 146 ->  10010010 | 178 ->  10110010 | 210 ->  11010010 | 242 ->  11110010 |
  19 ->     10011 |  51 ->    110011 |  83 ->   1010011 | 115 ->   1110011 | 147 ->  10010011 | 179 ->  10110011 | 211 ->  11010011 | 243 ->  11110011 |
  20 ->     10100 |  52 ->    110100 |  84 ->   1010100 | 116 ->   1110100 | 148 ->  10010100 | 180 ->  10110100 | 212 ->  11010100 | 244 ->  11110100 |
  21 ->     10101 |  53 ->    110101 |  85 ->   1010101 | 117 ->   1110101 | 149 ->  10010101 | 181 ->  10110101 | 213 ->  11010101 | 245 ->  11110101 |
  22 ->     10110 |  54 ->    110110 |  86 ->   1010110 | 118 ->   1110110 | 150 ->  10010110 | 182 ->  10110110 | 214 ->  11010110 | 246 ->  11110110 |
  23 ->     10111 |  55 ->    110111 |  87 ->   1010111 | 119 ->   1110111 | 151 ->  10010111 | 183 ->  10110111 | 215 ->  11010111 | 247 ->  11110111 |
  24 ->     11000 |  56 ->    111000 |  88 ->   1011000 | 120 ->   1111000 | 152 ->  10011000 | 184 ->  10111000 | 216 ->  11011000 | 248 ->  11111000 |
  25 ->     11001 |  57 ->    111001 |  89 ->   1011001 | 121 ->   1111001 | 153 ->  10011001 | 185 ->  10111001 | 217 ->  11011001 | 249 ->  11111001 |
  26 ->     11010 |  58 ->    111010 |  90 ->   1011010 | 122 ->   1111010 | 154 ->  10011010 | 186 ->  10111010 | 218 ->  11011010 | 250 ->  11111010 |
  27 ->     11011 |  59 ->    111011 |  91 ->   1011011 | 123 ->   1111011 | 155 ->  10011011 | 187 ->  10111011 | 219 ->  11011011 | 251 ->  11111011 |
  28 ->     11100 |  60 ->    111100 |  92 ->   1011100 | 124 ->   1111100 | 156 ->  10011100 | 188 ->  10111100 | 220 ->  11011100 | 252 ->  11111100 |
  29 ->     11101 |  61 ->    111101 |  93 ->   1011101 | 125 ->   1111101 | 157 ->  10011101 | 189 ->  10111101 | 221 ->  11011101 | 253 ->  11111101 |
  30 ->     11110 |  62 ->    111110 |  94 ->   1011110 | 126 ->   1111110 | 158 ->  10011110 | 190 ->  10111110 | 222 ->  11011110 | 254 ->  11111110 |
  31 ->     11111 |  63 ->    111111 |  95 ->   1011111 | 127 ->   1111111 | 159 ->  10011111 | 191 ->  10111111 | 223 ->  11011111 | 255 ->  11111111 |


Tests mit convertBin2Dez    13.12.2022 16:31:37,072
========================
 Dualzahl -> Dez |  Dualzahl -> Dez |  Dualzahl -> Dez |  Dualzahl -> Dez |  Dualzahl -> Dez |  Dualzahl -> Dez |  Dualzahl -> Dez |  Dualzahl -> Dez |
        0 ->   0 |         1 ->   1 |        10 ->   2 |        11 ->   3 |       100 ->   4 |       101 ->   5 |       110 ->   6 |       111 ->   7 | 
     1000 ->   8 |      1001 ->   9 |      1010 ->  10 |      1011 ->  11 |      1100 ->  12 |      1101 ->  13 |      1110 ->  14 |      1111 ->  15 | 
    10000 ->  16 |     10001 ->  17 |     10010 ->  18 |     10011 ->  19 |     10100 ->  20 |     10101 ->  21 |     10110 ->  22 |     10111 ->  23 | 
    11000 ->  24 |     11001 ->  25 |     11010 ->  26 |     11011 ->  27 |     11100 ->  28 |     11101 ->  29 |     11110 ->  30 |     11111 ->  31 | 
   100000 ->  32 |    100001 ->  33 |    100010 ->  34 |    100011 ->  35 |    100100 ->  36 |    100101 ->  37 |    100110 ->  38 |    100111 ->  39 | 
   101000 ->  40 |    101001 ->  41 |    101010 ->  42 |    101011 ->  43 |    101100 ->  44 |    101101 ->  45 |    101110 ->  46 |    101111 ->  47 | 
   110000 ->  48 |    110001 ->  49 |    110010 ->  50 |    110011 ->  51 |    110100 ->  52 |    110101 ->  53 |    110110 ->  54 |    110111 ->  55 | 
   111000 ->  56 |    111001 ->  57 |    111010 ->  58 |    111011 ->  59 |    111100 ->  60 |    111101 ->  61 |    111110 ->  62 |    111111 ->  63 | 
  1000000 ->  64 |   1000001 ->  65 |   1000010 ->  66 |   1000011 ->  67 |   1000100 ->  68 |   1000101 ->  69 |   1000110 ->  70 |   1000111 ->  71 | 
  1001000 ->  72 |   1001001 ->  73 |   1001010 ->  74 |   1001011 ->  75 |   1001100 ->  76 |   1001101 ->  77 |   1001110 ->  78 |   1001111 ->  79 | 
  1010000 ->  80 |   1010001 ->  81 |   1010010 ->  82 |   1010011 ->  83 |   1010100 ->  84 |   1010101 ->  85 |   1010110 ->  86 |   1010111 ->  87 | 
  1011000 ->  88 |   1011001 ->  89 |   1011010 ->  90 |   1011011 ->  91 |   1011100 ->  92 |   1011101 ->  93 |   1011110 ->  94 |   1011111 ->  95 | 
  1100000 ->  96 |   1100001 ->  97 |   1100010 ->  98 |   1100011 ->  99 |   1100100 -> 100 |   1100101 -> 101 |   1100110 -> 102 |   1100111 -> 103 | 
  1101000 -> 104 |   1101001 -> 105 |   1101010 -> 106 |   1101011 -> 107 |   1101100 -> 108 |   1101101 -> 109 |   1101110 -> 110 |   1101111 -> 111 | 
  1110000 -> 112 |   1110001 -> 113 |   1110010 -> 114 |   1110011 -> 115 |   1110100 -> 116 |   1110101 -> 117 |   1110110 -> 118 |   1110111 -> 119 | 
  1111000 -> 120 |   1111001 -> 121 |   1111010 -> 122 |   1111011 -> 123 |   1111100 -> 124 |   1111101 -> 125 |   1111110 -> 126 |   1111111 -> 127 | 
 10000000 -> 128 |  10000001 -> 129 |  10000010 -> 130 |  10000011 -> 131 |  10000100 -> 132 |  10000101 -> 133 |  10000110 -> 134 |  10000111 -> 135 | 
 10001000 -> 136 |  10001001 -> 137 |  10001010 -> 138 |  10001011 -> 139 |  10001100 -> 140 |  10001101 -> 141 |  10001110 -> 142 |  10001111 -> 143 | 
 10010000 -> 144 |  10010001 -> 145 |  10010010 -> 146 |  10010011 -> 147 |  10010100 -> 148 |  10010101 -> 149 |  10010110 -> 150 |  10010111 -> 151 | 
 10011000 -> 152 |  10011001 -> 153 |  10011010 -> 154 |  10011011 -> 155 |  10011100 -> 156 |  10011101 -> 157 |  10011110 -> 158 |  10011111 -> 159 | 
 10100000 -> 160 |  10100001 -> 161 |  10100010 -> 162 |  10100011 -> 163 |  10100100 -> 164 |  10100101 -> 165 |  10100110 -> 166 |  10100111 -> 167 | 
 10101000 -> 168 |  10101001 -> 169 |  10101010 -> 170 |  10101011 -> 171 |  10101100 -> 172 |  10101101 -> 173 |  10101110 -> 174 |  10101111 -> 175 | 
 10110000 -> 176 |  10110001 -> 177 |  10110010 -> 178 |  10110011 -> 179 |  10110100 -> 180 |  10110101 -> 181 |  10110110 -> 182 |  10110111 -> 183 | 
 10111000 -> 184 |  10111001 -> 185 |  10111010 -> 186 |  10111011 -> 187 |  10111100 -> 188 |  10111101 -> 189 |  10111110 -> 190 |  10111111 -> 191 | 
 11000000 -> 192 |  11000001 -> 193 |  11000010 -> 194 |  11000011 -> 195 |  11000100 -> 196 |  11000101 -> 197 |  11000110 -> 198 |  11000111 -> 199 | 
 11001000 -> 200 |  11001001 -> 201 |  11001010 -> 202 |  11001011 -> 203 |  11001100 -> 204 |  11001101 -> 205 |  11001110 -> 206 |  11001111 -> 207 | 
 11010000 -> 208 |  11010001 -> 209 |  11010010 -> 210 |  11010011 -> 211 |  11010100 -> 212 |  11010101 -> 213 |  11010110 -> 214 |  11010111 -> 215 | 
 11011000 -> 216 |  11011001 -> 217 |  11011010 -> 218 |  11011011 -> 219 |  11011100 -> 220 |  11011101 -> 221 |  11011110 -> 222 |  11011111 -> 223 | 
 11100000 -> 224 |  11100001 -> 225 |  11100010 -> 226 |  11100011 -> 227 |  11100100 -> 228 |  11100101 -> 229 |  11100110 -> 230 |  11100111 -> 231 | 
 11101000 -> 232 |  11101001 -> 233 |  11101010 -> 234 |  11101011 -> 235 |  11101100 -> 236 |  11101101 -> 237 |  11101110 -> 238 |  11101111 -> 239 | 
 11110000 -> 240 |  11110001 -> 241 |  11110010 -> 242 |  11110011 -> 243 |  11110100 -> 244 |  11110101 -> 245 |  11110110 -> 246 |  11110111 -> 247 | 
 11111000 -> 248 |  11111001 -> 249 |  11111010 -> 250 |  11111011 -> 251 |  11111100 -> 252 |  11111101 -> 253 |  11111110 -> 254 |  11111111 -> 255 | 


Tests mit getCrossSum    13.12.2022 16:31:37,081
=====================
getCrossSum(  57):      	  12 - Erwartet  12 -> OK
getCrossSum( -75):      	  12 - Erwartet  12 -> OK
getCrossSum( 123):      	   6 - Erwartet   6 -> OK
getCrossSum(  99):      	  18 - Erwartet  18 -> OK
getCrossSum( 119):      	  11 - Erwartet  11 -> OK
getCrossSum(-111):      	   3 - Erwartet   3 -> OK
getCrossSum(   0):      	   0 - Erwartet   0 -> OK

getCrossSum( 19918):      	  28 - Erwartet  28 -> OK
getCrossSum(-27479):      	  29 - Erwartet  29 -> OK
getCrossSum( 27979):      	  34 - Erwartet  34 -> OK
getCrossSum( -9999):      	  36 - Erwartet  36 -> OK
getCrossSum( 24489):      	  27 - Erwartet  27 -> OK
getCrossSum(-11111):      	   5 - Erwartet   5 -> OK
getCrossSum(     0):      	   0 - Erwartet   0 -> OK

getCrossSum( 2008196864):      	  44 - Erwartet  44 -> OK
getCrossSum(-1000000000):      	   1 - Erwartet   1 -> OK
getCrossSum( 1659790976):      	  59 - Erwartet  59 -> OK
getCrossSum( 1119418368):      	  42 - Erwartet  42 -> OK
getCrossSum( 1234567890):      	  45 - Erwartet  45 -> OK
getCrossSum( 1999999999):      	  82 - Erwartet  82 -> OK
getCrossSum(          0):      	   0 - Erwartet   0 -> OK

getCrossSum("12345"                                             ): 	  15 - Erwartet  15 -> OK
getCrossSum("-1234"                                             ): 	  10 - Erwartet  10 -> OK
getCrossSum(""                                                  ): 	   0 - Erwartet   0 -> OK
getCrossSum(null                                                ): 	   0 - Erwartet   0 -> OK
getCrossSum("02764189744379"                                    ): 	  71 - Erwartet  71 -> OK
getCrossSum("10000000000000000000000000000000000000000000000000"): 	   1 - Erwartet   1 -> OK
getCrossSum("99999999999999999999999999999999999999999999999999"): 	 450 - Erwartet 450 -> OK


Tests mit getMaxBlock    13.12.2022 16:31:37,083
=====================
getMaxBlock("hoopla"                                            ):   2 - Erwartet   2 -> OK
getMaxBlock("abbCCCddBBBxx"                                     ):   3 - Erwartet   3 -> OK
getMaxBlock(""                                                  ):   0 - Erwartet   0 -> OK
getMaxBlock(null                                                ):   0 - Erwartet   0 -> OK
getMaxBlock("abbbcbbbxbbbx"                                     ):   3 - Erwartet   3 -> OK
getMaxBlock("XX2222BBBbbXX2222"                                 ):   4 - Erwartet   4 -> OK
getMaxBlock("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"):  50 - Erwartet  50 -> OK


Tests mit endsWith    13.12.2022 16:31:37,083
==================
endsWith("Wirtschaft", "Schaft"            , false):  true - Erwartet  true -> OK
endsWith("Bier holen", "hole Bier"         , false): false - Erwartet  true -> OK
endsWith("Wunder"    , "Wirtschaftswunder" , false):  true - Erwartet  true -> OK
endsWith("HalliHallo", "hallo"             , false):  true - Erwartet  true -> OK
endsWith("Bier"      , "Schwarzbier"       ,  true): false - Erwartet  true -> OK
endsWith("Käsekuchen", "Käse"              , false):  true - Erwartet  true -> FEHLER! FEHLER! FEHLER!
endsWith(""          , "Hase"              ,  true):  true - Erwartet  true -> OK
endsWith("N"         , "Hasen"             ,  true): false - Erwartet  true -> OK
endsWith(""          , ""                  ,  true):  true - Erwartet  true -> OK


Tests mit isPangramm    13.12.2022 16:31:37,084
====================
isPangramm("Vogel Quax zwickt Johnys Pferd Bim"         ):  true - Erwartet  true -> OK
isPangramm("Programmieren Praktikum"                    ): false - Erwartet false -> OK
isPangramm("Sylvia wagt quick den Jux bei Pforzheim"    ):  true - Erwartet  true -> OK
isPangramm(""                                           ): false - Erwartet false -> OK
isPangramm(null                                         ): false - Erwartet false -> OK
isPangramm("Prall vom Whisky flog Quax den Jet zu Bruch"):  true - Erwartet  true -> OK


Tests mit checkBrackets    13.12.2022 16:31:37,084
=======================
checkBrackets("()/*{[/*]}<>*/"                               ):  true - Erwartet  true -> OK
checkBrackets("checkBrackets(()()) a)"                       ): false - Erwartet false -> OK
checkBrackets("(({[[{]]}))<()>"                              ): false - Erwartet false -> OK
checkBrackets(""                                             ):  true - Erwartet  true -> OK
checkBrackets(null                                           ):  true - Erwartet  true -> OK
checkBrackets("/**/sin() cos() feld[][] getNetto() <!-- -->" ):  true - Erwartet  true -> OK

checkBracketsWC("()/*{[]}<>*/"                                 ):  true - Erwartet  true -> OK
checkBracketsWC("checkBrackets(()()) a)"                       ): false - Erwartet false -> OK
checkBracketsWC("(({[[{]]}))<()>"                              ): false - Erwartet false -> OK
checkBracketsWC("/* Dies ist ein Test */"                      ):  true - Erwartet  true -> OK
checkBracketsWC("/* Dies /*ist*/ ein Test */"                  ):  true - Erwartet  true -> OK
checkBracketsWC("/* Dies /*ist ein Test */"                    ): false - Erwartet false -> OK
checkBracketsWC(""                                             ):  true - Erwartet  true -> OK
checkBracketsWC(null                                           ):  true - Erwartet  true -> OK
checkBracketsWC("/**/sin() cos() feld[][] getNetto() <!-- -->" ):  true - Erwartet  true -> OK


Tests mit stringSort    13.12.2022 16:31:37,085
====================
stringSort("Auszug aus dem Alphabet"  , "Klappt es"             ): ""                                  - Erwartet "auauaeueaaeklszppgt  ss dm lphbt"  -> FEHLER! FEHLER! FEHLER!
stringSort("Programmieren Praktikum"  , "ernstl"                ): ""                                  - Erwartet "eoaieeaiuprrngsrtlmmrn prktkm"     -> FEHLER! FEHLER! FEHLER!
stringSort("Wirtschaftsinformatik"    , "aeiou"                 ): ""                                  - Erwartet "aieiouaioaiwrtschftsnfrmtk"        -> FEHLER! FEHLER! FEHLER!
stringSort("Wirtschaftsinformatik"    , ""                      ): ""                                  - Erwartet "iaioaiwrtschftsnfrmtk"             -> FEHLER! FEHLER! FEHLER!
stringSort(""                         , "Programmieren in Java" ): ""                                  - Erwartet "oaieeiaaprgrmmrn n jv"             -> FEHLER! FEHLER! FEHLER!
stringSort("Blabla"                   , "Blublu"                ): ""                                  - Erwartet "auaubbllbbll"                      -> FEHLER! FEHLER! FEHLER!
stringSort(""                         , ""                      ): ""                                  - Erwartet ""                                  -> OK
stringSort(null                       , ""                      ): ""                                  - Erwartet ""                                  -> OK
stringSort(""                         , null                    ): ""                                  - Erwartet ""                                  -> OK
stringSort("abc"                      , "def"                   ): ""                                  - Erwartet "aedbcf"                            -> FEHLER! FEHLER! FEHLER!
stringSort("Wodka Whisky"             , "adehikosuwy"           ): ""                                  - Erwartet "aoeaioiuwddkh kwhsswkyy"           -> FEHLER! FEHLER! FEHLER!


Tests mit getISBN    13.12.2022 16:31:37,085
=================
getISBN("ISBN 3-499-13599-"): "ISBN 3-499-13599-X" - Erwartet "ISBN 3-499-13599-X" -> OK
getISBN("ISBN 3-446-19313-"): "ISBN 3-446-19313-X" - Erwartet "ISBN 3-446-19313-8" -> FEHLER! FEHLER! FEHLER!
getISBN("ISBN 0-7475-5100-"): "ISBN 0-7475-5100-"  - Erwartet "ISBN 0-7475-5100-6" -> FEHLER! FEHLER! FEHLER!
getISBN("ISBN 1-57231-422-"): "ISBN 1-57231-422-"  - Erwartet "ISBN 1-57231-422-2" -> FEHLER! FEHLER! FEHLER!
getISBN(""                 ): ""                   - Erwartet ""                   -> OK
getISBN(null               ): ""                   - Erwartet ""                   -> OK
getISBN("ISBN 3-8077-0171-"): "ISBN 3-8077-0171-"  - Erwartet "ISBN 3-8077-0171-0" -> FEHLER! FEHLER! FEHLER!


Tests mit checkIdCard    13.12.2022 16:31:37,086
=====================
     _.--""--._
    /  _    _  \
 _  ( (_\  /_) )  _
{ \._\   /\   /_./ }
/_"=-.}______{.-="_\      laut RuntimeConfig noch nicht implementiert
 _  _.=("""")=._  _
(_'"_.-"`~~`"-._"'_)
 {_"            "_}
